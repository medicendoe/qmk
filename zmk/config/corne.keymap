/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/outputs.h>

#define TYP 0
#define SIM 1
#define MOV 2
#define MED 3
#define NUM 4
#define FUN 5
#define CON 6
#define MSF 7

/ {
        keymap {
                compatible = "zmk,keymap";

                english {
// -----------------------------------------------------------------------------------------
// |   -  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   +  |
// | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp RBKT  &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp LBKT
   &kp TAB   &mt LSHFT A &mt LALT S &mt LCTRL D &mt LGUI F &kp G   &kp H &mt RGUI J  &mt RCTRL K  &mt RALT L   &mt RSHFT SEMI &kp SQT
   &kp MINUS &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp PLUS
                 &mo MSF &kp ESC &kp SPACE   &kp RET &kp BSPC &mo MSF
                        >;
                };

                simbols {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp GRAVE &kp N1    &kp N2        &kp N3   &kp N4   &kp N5      &kp N6    &kp N7   &kp N8   &kp N9     &kp N0    &kp EQUAL
   &kp TILDE &kp EXCL  &kp AT        &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS &kp STAR &kp LPAR   &kp RPAR  &kp PLUS
   &kp SLASH &kp MINUS &kp RA(SLASH) &kp BSLH &kp RBKT &kp LBKT    &kp LBRC  &kp RBRC &kp PIPE &kp RA(N1) &kp UNDER &kp QMARK
                                         &trans &tog SIM &trans    &trans &trans &trans
                        >;
                };

                movement {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none &none &none &none &none &none           &none          &none          &none        &none           &none &none
   &none &none &none &kp LG(H) &kp LG(L) &none   &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT       &none &none
   &none &none &none &none &none &none           &kp HOME       &kp PG_UP      &kp PG_DN    &kp END         &none &none
                           &trans &tog MOV &trans     &trans &trans &trans
                        >;
                };

                media {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none &none &kp C_BRI_UP &kp C_NEXT &kp C_VOL_UP &none       &none &none &none &none &none &none
   &none &none &kp LEFT     &kp C_PP   &kp C_MUTE   &kp RIGHT   &none &none &none &none &none &none
   &none &none &kp C_BRI_DN &kp C_PREV &kp C_VOL_DN &none       &none &none &none &none &none &none
                                   &trans &tog MED &trans       &trans &trans &trans
                        >;
                };

                numpad {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none &none &none &none &none &none   &none     &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_PLUS     &kp KP_MINUS
   &none &none &none &none &none &none   &kp KP_N0 &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_MULTIPLY &kp KP_DIVIDE
   &none &none &none &none &none &none   &none     &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_DOT      &kp KP_EQUAL
                &trans &tog NUM &trans   &trans &trans &trans
                        >;
                };

                function {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6                &none &none &none &none &none &none
   &none &kp DEL &kp INS &kp K_PASTE &kp K_COPY &kp K_CUT   &none &none &none &none &none &none
   &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12             &none &none &none &none &none &none
                           &trans &tog FUN &trans           &trans &trans &trans
                        >;
                };

                config {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none      &none        &none        &none        &none        &none    &none &none &none &none &none &none
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &out OUT_TOG    &none &none &none &none &none &none
   &none      &none        &none        &none        &none        &none    &none &none &none &none &none &none
                                                 &none &tog CON &bt BT_CLR    &trans &trans &trans
                        >;
                };

                mode_shift {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none &none &none &none &none &none   &none &none &none &none &none &none
   &none &none &to CON &to FUN &to MED &none   &none &to SIM &to MOV &to NUM &none &none
   &none &none &none &none &none &none   &none &none &none &none &none &none
                  &trans &trans &trans   &trans &trans &trans
                        >;
                };

        };
};